@using BlazeBuy.Services
@using BlazeBuy.Services.Interfaces
@rendermode InteractiveServer

@inject AuthenticationStateProvider _authStateProvider
@inject SharedStateService _sharedStateService
@inject IShoppingCartService _cartService

<nav class="navbar navbar-expand-md navbar-dark bg-dark pb-4 pt-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <img src="/images/Logo.png" alt="Logo" width="30" height="24" />
            BlzShop
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-labelledby="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                <li class="nav-item mx-2">
                    <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item mx-2">
                    <NavLink class="nav-link" href="/cart">
                        <span class="bi bi-cart3" aria-hidden="true"></span>
                        Cart @(_sharedStateService.TotalCartCount > 0 ? $"({_sharedStateService.TotalCartCount})" : "")
                    </NavLink>
                </li>
                <li class="nav-item mx-2">
                    <NavLink class="nav-link" href="">
                        <span class="bi bi-card-list" aria-hidden="true"></span> Order List
                    </NavLink>
                </li>
            </ul>

            <ul class="d-flex navbar-nav mb-2 mb-md-0">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link p-2" href="">
                                Welcome, @context?.User?.Identity?.Name
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="" />
                                <button type="submit" class="nav-link btn btn-success">
                                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link btn btn-success" href="">
                                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    protected override async Task OnInitializedAsync()
    {
        _sharedStateService.CartCountChanged += OnCartCountChanged;

        // fetch initial count once user is known
        var authState = await _authStateProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        if (!string.IsNullOrWhiteSpace(userId))
            await _sharedStateService.RefreshAsync(userId);
    }

    private void OnCartCountChanged(int _) => InvokeAsync(StateHasChanged);

    public void Dispose() =>
        _sharedStateService.CartCountChanged -= OnCartCountChanged;
}